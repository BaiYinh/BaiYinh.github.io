<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>OBS虚拟摄像头使用教程</title>
    <url>/2022/03/24/OBS-Virtual-Cam/</url>
    <content><![CDATA[<h1 id="前言-白银的碎碎念"><a href="#前言-白银的碎碎念" class="headerlink" title="前言(白银的碎碎念):"></a>前言(白银的碎碎念):</h1><p>前几天朋友找我说想要在日语课上整活:</p>
<blockquote>
<p><img src="https://img1.imgtp.com/2022/03/24/SotNuQhB.png" alt="沈阳大街等你嗷"></p>
</blockquote>
<p>于是就有了这期视频:</p>

<iframe src="//player.bilibili.com/player.html?aid=682289088&bvid=BV1NU4y1Z7YW&cid=552401617&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>


<p>这几天Steam版本的OBS也上线了,等创意工坊开通了没准找素材了方便很多<br>正片如下:</p>
<hr>
<h1 id="B站教程"><a href="#B站教程" class="headerlink" title="B站教程:"></a>B站教程:</h1><blockquote>
<p><a href="https://www.bilibili.com/read/cv6583793/">https://www.bilibili.com/read/cv6583793/</a></p>
</blockquote>
<h1 id="你需要的东西如下"><a href="#你需要的东西如下" class="headerlink" title="你需要的东西如下:"></a>你需要的东西如下:</h1><ul>
<li>OBS安装程序(或Steam下载)</li>
<li>虚拟摄像头插件(OBS-Virtual-Cam)</li>
<li>勤奋的双手</li>
</ul>
<h1 id="OBS下载"><a href="#OBS下载" class="headerlink" title="OBS下载"></a>OBS下载</h1><p>官网:</p>
<blockquote>
<p><a href="https://obsproject.com/">https://obsproject.com/</a><br>下载Windows版本即可</p>
</blockquote>
<p>Steam:</p>
<blockquote>
<p><a href="https://store.steampowered.com/app/1905180/OBS_Studio/">https://store.steampowered.com/app/1905180/OBS_Studio&#x2F;</a></p>
</blockquote>
<p>下载安装完成后就可以安装虚拟摄像头插件了:</p>
<h1 id="安装虚拟摄像头插件"><a href="#安装虚拟摄像头插件" class="headerlink" title="安装虚拟摄像头插件"></a>安装虚拟摄像头插件</h1><h2 id="下载安装OBS-Virtual-Cam"><a href="#下载安装OBS-Virtual-Cam" class="headerlink" title="下载安装OBS-Virtual-Cam"></a>下载安装OBS-Virtual-Cam</h2><blockquote>
<p><a href="https://obsproject.com/forum/resources/obs-virtualcam.949/">https://obsproject.com/forum/resources/obs-virtualcam.949/</a></p>
</blockquote>
<p>下载完成后安装:<br>选择安装OBS的路径:</p>
<blockquote>
<p>默认路径:C:\Program Files\obs-studio<br>Steam路径:.\Steam\steamapps\common\OBS Studio\obs-studio(若安装盘与steam盘不同则在steam库中右键浏览本地文件)<br><img src="https://img1.imgtp.com/2022/03/24/UV3BvBtU.png" alt="浏览本地文件"></p>
</blockquote>
<p>虚拟摄像头数量填<code>1</code>即可:<br><img src="https://img1.imgtp.com/2022/03/24/ITkk4qwG.png"><br>Install安装<br>安装完成后打开OBS</p>
<h1 id="OBS配置"><a href="#OBS配置" class="headerlink" title="OBS配置"></a>OBS配置</h1><p>自动配置如果不需要使用OBS来录像就选最后一项仅使用虚拟摄像头:<br><img src="https://img1.imgtp.com/2022/03/24/AzAvMm9B.png"><br>配置完成后,添加来源,图片素材选图像,视频素材选媒体源:<br><img src="https://img1.imgtp.com/2022/03/24/yKqddYCt.png"><br>如果大小与画布不匹配,右键素材,选择变换&gt;比例适配屏幕:<br><img src="https://img1.imgtp.com/2022/03/24/1883ZfHr.png"></p>
<h1 id="打开虚拟摄像头"><a href="#打开虚拟摄像头" class="headerlink" title="打开虚拟摄像头"></a>打开虚拟摄像头</h1><p>点击上方工具&gt;虚拟摄像头:<br><img src="https://img1.imgtp.com/2022/03/24/5kdKSRbN.png"><br>选择水平翻转,点击启动:<br><img src="https://img1.imgtp.com/2022/03/24/GQczd0ia.png"><br>然后你就可以在你的设备里找到OBS-Camera的摄像头了,输出的画面就是OBS上的画面:<br><img src="https://img1.imgtp.com/2022/03/24/PDsubHF7.png"></p>
<hr>
<h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>现在你就可以拿着虚拟摄像头在班级群里整活了 )</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>OBS</tag>
      </tags>
  </entry>
  <entry>
    <title>TIM/QQ windows环境假死解决办法。</title>
    <url>/2022/03/21/TIM-QQ/</url>
    <content><![CDATA[<h1 id="前言-白银的碎碎念"><a href="#前言-白银的碎碎念" class="headerlink" title="前言(白银的碎碎念):"></a>前言(白银的碎碎念):</h1><p>最近电脑更新了win11,但是实际使用后发现打开TIM后会占用大量磁盘导致TIM假死,因为不想使用电脑端的QQ,于是就有了以下文文章:</p>
<hr>
<h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><h2 id="固态硬盘"><a href="#固态硬盘" class="headerlink" title="固态硬盘"></a>固态硬盘</h2><p>更新驱动。<br>win10下自带的驱动是微软的ahci驱动,更新时间是2006年,需要更新intel快速储存驱动。<br>相关链接:</p>
<blockquote>
<p><a href="https://www.autotechint.com/driver-talent">Driver Talent</a>(驱动人生)<br><a href="http://drivergenius.com/">驱动精灵</a><br><a href="http://dm.weishi.360.cn/home.html">360驱动大师</a><br><a href="https://www.iobit.com/en/driver-booster.php">Driver Booster</a></p>
</blockquote>
<h2 id="机械硬盘"><a href="#机械硬盘" class="headerlink" title="机械硬盘"></a>机械硬盘</h2><p><a href="https://support.microsoft.com/zh-cn/topic/%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86%E5%99%A8%E5%8F%AF%E8%83%BD%E4%BC%9A%E6%98%BE%E7%A4%BA-windows-10-%E8%AE%BE%E5%A4%87%E4%B8%8A-100-%E7%9A%84%E7%A3%81%E7%9B%98%E5%88%A9%E7%94%A8%E7%8E%87-%E5%B9%B6%E4%B8%94%E5%B7%B2%E5%90%AF%E7%94%A8%E6%B6%88%E6%81%AF%E6%8C%87%E7%A4%BA%E4%B8%AD%E6%96%AD-msi-%E6%A8%A1%E5%BC%8F-db9b59bd-0fcd-bc7a-825c-de0bb67f3097">微软官方解决方案</a></p>
<p><a href="https://blog.csdn.net/qazwsxedc80/article/details/108911854">CSDN解决方案</a></p>
<p>总结:<br>打开设备管理器,如下图,ahci控制器右键属性。切到详细信息选项卡,属性下选择“设备实例路径”,记下返回值。<br>win+R打开运行命令提示符,键入 <code>regedit</code> ,打开注册表编辑器,依次打开注册表路径 <code>计算机\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Enum\刚刚记录下的值\Device Parameters\Interrupt Management\MessageSignaledInterruptProperties</code> 将MSISupported的值由1修改为0,关机重启。<br>或是将同路径下的MessageNumberLimit值改为 1、2、4、8 或 16</p>
<h2 id="不管是什么盘-网友阉割版-纯净版-推荐"><a href="#不管是什么盘-网友阉割版-纯净版-推荐" class="headerlink" title="不管是什么盘(网友阉割版(纯净版))(推荐)"></a>不管是什么盘(网友阉割版(纯净版))(推荐)</h2><p>纯净版免安装版,下载即用:</p>
<blockquote>
<p><a href="https://www.lanzoui.com/b00zctzhe"></a></p>
</blockquote>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>TIM</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World|Github Pages博客搭建教程</title>
    <url>/2022/03/19/hello-world/</url>
    <content><![CDATA[<h1 id="前言-白银的碎碎念"><a href="#前言-白银的碎碎念" class="headerlink" title="前言(白银的碎碎念):"></a>前言(白银的碎碎念):</h1><p>故事是这样发生的:<br>某天我在某个服务器宣传群看到了这个消息:</p>
<blockquote>
<p>我的天,<a href="https://curl.qcloud.com/iC6k2Gjj">https://curl.qcloud.com/iC6k2Gjj</a><br>腾讯云2核2G才40一年真的假的</p>
</blockquote>
<p>经历过一个月两百多块的阿里云的我当时就绷不住了,马上打开电脑花了两百块买了三年。<br><img src="https://img1.imgtp.com/2022/03/19/2tJP3AAr.png"><br>配置完密钥,安装完宝塔,编译完LNMP后准备建站。后来想了想,既然已经做过了BBS,OL官网等网页,那就建个个人博客吧(其实是看了Lition的博客后想自己动手做一个),然后当天晚上在跟夜夜闲聊的时候才知道原来未成年人要有工作证明才能备案(</p>
<div class="note warning simple"><p><del>日日夜夜</del></p>
</div>
<p>后来知道了Lition的博客是用Hexo生成的静态网页上传至Github Pages实现的,既不用花一分钱,也不用考虑被D的问题。于是说干就干,便旷了一天半网课搞这个Hexo。<br>正片如下:</p>
<hr>
<h1 id="Hexo介绍"><a href="#Hexo介绍" class="headerlink" title="Hexo介绍:"></a>Hexo介绍:</h1><p>Hexo是一款基于Node.js的静态博客框架,依赖少易于安装使用,可以方便的生成静态网页托管在GitHub、Coding和Gitee上,是搭建博客的首选框架。可以进入<a href="https://hexo.io/zh-cn/">hexo官网</a>进行详细查看,因为Hexo的创建者是台湾人,对中文的支持很友好,可以选择中文进行查看。</p>
<h2 id="安装前置"><a href="#安装前置" class="headerlink" title="安装前置:"></a>安装前置:</h2><h4 id="你需要准备的东西如下"><a href="#你需要准备的东西如下" class="headerlink" title="你需要准备的东西如下:"></a>你需要准备的东西如下:</h4><ol>
<li>Github账号</li>
<li>git工具</li>
<li>Node.js</li>
<li>yarn(可选,用于解决后续一个微小的BUG)</li>
<li>个人域名(可选)</li>
<li>一个好的脑子</li>
<li>和一个勤奋的双手</li>
</ol>
<h3 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h3><p>Hexo是基于Nodejs编写的,所以需要安装Nodejs和npm工具。</p>
<blockquote>
<p><a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p>
</blockquote>
<p>选择最新版本即可。<br>安装完后,在命令行中键入以下命令检查有没有安装成功:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">node <span class="literal">-v</span></span><br><span class="line">npm <span class="literal">-v</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img1.imgtp.com/2022/03/19/QSjWtDRZ.png" alt="版本检查"></p>
<h3 id="安装Git工具"><a href="#安装Git工具" class="headerlink" title="安装Git工具"></a>安装Git工具</h3><p>Git是目前世界上最先进的分布式版本控制系统,可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章,上传到GitHub的工具。</p>
<blockquote>
<p><a href="https://gitforwindows.org/">https://gitforwindows.org/</a></p>
</blockquote>
<p>下载完后安装一路next。<br>安装完后,可以打开Git Bash,右键窗口,点击Optins,转到Window选项,将UI language选项设为zh_CN(中文)。<br><img src="https://img1.imgtp.com/2022/03/19/JyvGuPpU.png"><br>完成后,在命令行中键入以下命令检查有没有安装成功:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git <span class="literal">--version</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img1.imgtp.com/2022/03/19/BuHuaBX9.png"><br>完成以上工作后就可以跳转至Hexo安装了,以下是可选安装:</p>
<h3 id="安装yarn"><a href="#安装yarn" class="headerlink" title="安装yarn"></a>安装yarn</h3><p>Yarn是facebook发布的一个快速、可靠和安全的JavaScript依赖管理工具。</p>
<blockquote>
<p><a href="https://github.com/yarnpkg/yarn/releases/">https://github.com/yarnpkg/yarn/releases/</a></p>
</blockquote>
<p>下载mis文件安装,安装完后,在命令行中键入以下命令检查有没有安装成功:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">yarn <span class="literal">-v</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img1.imgtp.com/2022/03/19/RWXdYHO7.png"></p>
<hr>
<h1 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h1><p>前面git和nodejs安装好后,就可以安装hexo了,你可以在任意位置创建一个文件夹Hexo,然后cd到这个文件夹下(或者在文件夹路径处键入cmd打开命令行)。<br>键入命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install <span class="literal">-g</span> hexo<span class="literal">-cli</span></span><br></pre></td></tr></table></figure>
<p>然后用 <code>hexo v</code> 检查一下版本。<br><img src="https://img1.imgtp.com/2022/03/19/shSSgU70.png"><br>到这就全部安装完成了。<br>接下来需要初始化Hexo:</p>
<h1 id="Hexo初始化"><a href="#Hexo初始化" class="headerlink" title="Hexo初始化"></a>Hexo初始化</h1><p>在文件夹路径处键入cmd打开命令行,确保当前路径在Hexo文件夹下。<br>键入命令:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>新建完成后,指定文件夹目录下有:</p>
<ul>
<li>node_modules: 依赖包</li>
<li>public:存放生成的静态页面</li>
<li>scaffolds:生成文章的一些模板</li>
<li>source:用来存放你的文章</li>
<li>themes:主题</li>
<li>_config.yml: 博客的配置文件</li>
</ul>
<p>键入以下命令:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>其中 “<code>hexo g</code>“ 是生成网页静态文件的命令, “<code>hexo s</code>“ 是开启本地服务器的命令(即预览)。键入后,浏览器访问<a href="http://localhost:4000/">http://localhost:4000/</a>就可以看到你生成的博客了。<br>大概这样:<br><img src="https://img1.imgtp.com/2022/03/19/k949sw5M.jpg"><br>完成以上操作后,就可以开始博客美化了:</p>
<h1 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h1><p>Hexo官方中文文档:</p>
<blockquote>
<p><a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p>
</blockquote>
<hr>
<h1 id="Hexo优化"><a href="#Hexo优化" class="headerlink" title="Hexo优化"></a>Hexo优化</h1><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><p>我选择的是Butterfly主题,当然还有更多好看的主题可以在Github上找,例如next<br>安装和配置过程:</p>
<blockquote>
<p>Butterfly官方安装文档:<a href="https://butterfly.js.org/posts/21cfbf15/">https://butterfly.js.org/posts/21cfbf15/</a>&gt; </p>
</blockquote>
<p>在你的 Hexo 根目录里,键入:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git clone <span class="literal">-b</span> master https://github.com/jerryc127/hexo<span class="literal">-theme-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></table></figure>

<h2 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h2><p>打开Hexo根目录下的 <code>_config.yml</code> 并下拉(大概在_config.yml文件代码第100行),修改主题为butterfly:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure>

<p>如果(肯定没有所以一定要下载)你没有 pug 以及 stylus 的渲染器,请下载安装:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install hexo<span class="literal">-renderer-pug</span> hexo<span class="literal">-renderer-stylus</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure>

<p>完成以上过程后,butterfly主题就应用完成了。</p>
<h2 id="预览主题"><a href="#预览主题" class="headerlink" title="预览主题"></a>预览主题</h2><p>键入 <code>hexo s</code> ,浏览器访问<a href="http://localhost:4000/">http://localhost:4000/</a>就可以看到你应用主题的博客了。<br>大概这样:<br><img src="https://img1.imgtp.com/2022/03/20/ZaW101Aa.jpg"></p>
<h3 id="Bug修复"><a href="#Bug修复" class="headerlink" title="Bug修复"></a>Bug修复</h3><p>在你键入 <code>hexo s</code> ,访问<a href="http://localhost:4000/">http://localhost:4000/</a>后,可能会出现类似以下的报错:</p>
<blockquote>
<p>(node:xxxx) Warning: Accessing non-existent property ‘xxxx’ of module exports inside circular dependency<br><img src="https://img1.imgtp.com/2022/03/20/vjxsufWT.png"></p>
</blockquote>
<p>这是因为我们安装的新版nodejs与hexo存在不兼容的现象,Hexo 这里的 warning 其实是 <a href="mailto:&#110;&#105;&#98;&#x40;&#x31;&#46;&#49;&#46;&#50;">&#110;&#105;&#98;&#x40;&#x31;&#46;&#49;&#46;&#50;</a> 这个包里的 stylus 引起的问题,nib 里的 dependencies 如下:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;stylus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.54.5&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>所以解决方法如下:<br>在 Hexo 根目录里的 <code>package.json</code> 增加 <code>resolutions</code> 来覆盖版本定义:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;resolutions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;stylus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.54.8&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>然后键入 <code>yarn install</code>后就可以解决了。</p>
<div class="note warning modern"><p>使用 <code>npm install</code> 无法解决这个bug,必须使用 <code>yarn install</code> </p>
</div>

<h2 id="Hexo美化-站在巨人的肩膀上"><a href="#Hexo美化-站在巨人的肩膀上" class="headerlink" title="Hexo美化(站在巨人的肩膀上)"></a>Hexo美化(站在巨人的肩膀上)</h2><div class="note info modern"><p>这些博主的教程可以用心看一遍,我参考了他们很多东西,希望也能帮助到你。</p>
<table>
<thead>
<tr>
<th>作者</th>
<th>地址</th>
</tr>
</thead>
<tbody><tr>
<td>Ethan</td>
<td><a href="https://tzy1997.com/articles/hexo541u">Hexo+Butterfly主题美化</a></td>
</tr>
<tr>
<td>洪卫</td>
<td><a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></td>
</tr>
<tr>
<td>Jerry</td>
<td><a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly教程</a></td>
</tr>
</tbody></table>
</div>

<p>完成以上操作后,就可以上传至GitHub了:</p>
<hr>
<h1 id="连接Github"><a href="#连接Github" class="headerlink" title="连接Github"></a>连接Github</h1><h2 id="连接-Github"><a href="#连接-Github" class="headerlink" title="连接 Github"></a>连接 Github</h2><p>使用邮箱注册 <a href="https//github.com">GitHub</a> 账户,选择免费账户(Free),并完成邮件验证。<br>打开命令行,设置用户名和邮箱:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git config <span class="literal">--global</span> user.name <span class="string">&quot;GitHub 用户名&quot;</span></span><br><span class="line">git config <span class="literal">--global</span> user.email <span class="string">&quot;GitHub 邮箱&quot;</span></span><br></pre></td></tr></table></figure>
<p>例如:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git config <span class="literal">--global</span> user.name <span class="string">&quot;Bob&quot;</span></span><br><span class="line">git config <span class="literal">--global</span> user.email <span class="string">&quot;Bob@outlook.com&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="创建SSH密钥"><a href="#创建SSH密钥" class="headerlink" title="创建SSH密钥"></a>创建SSH密钥</h2><p>输入 <code>ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</code> ,然后回车三次。</p>
<h2 id="添加密钥"><a href="#添加密钥" class="headerlink" title="添加密钥"></a>添加密钥</h2><p>进入 <code>[C:\Users\用户名\.ssh]</code> 目录(要勾选显示“隐藏的项目”),用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。<br>登陆 GitHub ,点击头像,进入 Settings 页面,选择左边栏的 SSH and GPG keys,点击 New SSH key。</p>
<p>Title 随便取个名字,粘贴复制的 id_rsa.pub 内容到 Key 中,点击 Add SSH key 完成添加:<br><img src="https://img1.imgtp.com/2022/03/20/RNbnlRMf.png"></p>
<h2 id="验证连接"><a href="#验证连接" class="headerlink" title="验证连接"></a>验证连接</h2><p>在命令行键入 <code>ssh -T git@github.com</code> ,可能会要求你输入Github的密码,出现 “Are you sure……”,输入 yes 回车确认。<br>显示 “Hi xxx! You’ve successfully……” 即连接成功。</p>
<h1 id="创建GitHub-Pages仓库"><a href="#创建GitHub-Pages仓库" class="headerlink" title="创建GitHub Pages仓库"></a>创建GitHub Pages仓库</h1><p>点击GitHub主页右上角的 New:</p>
<ul>
<li>Repository name填 <code>用户名.github.io</code></li>
<li><img src="https://img1.imgtp.com/2022/03/20/QHq0NfWt.png"></li>
</ul>
<p>创建后默认自动启用 HTTPS,地址为:https:&#x2F;&#x2F;用户名.github.io</p>
<h1 id="部署Hexo到Github-Pages"><a href="#部署Hexo到Github-Pages" class="headerlink" title="部署Hexo到Github Pages"></a>部署Hexo到Github Pages</h1><p>本地博客测试成功后,就是上传到 GitHub 进行部署,使其能够在网络上访问。</p>
<h2 id="安装-hexo-deployer-git"><a href="#安装-hexo-deployer-git" class="headerlink" title="安装 hexo-deployer-git"></a>安装 hexo-deployer-git</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install hexo<span class="literal">-deployer-git</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure>
<h2 id="修改-config-yml-文件"><a href="#修改-config-yml-文件" class="headerlink" title="修改 _config.yml 文件"></a>修改 <code>_config.yml</code> 文件</h2><p>将 <code> _config.yml</code> 文件末尾的 Deployment 部分,修改为如下:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:用户名/用户名.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>
<p>完成后运行 <code>hexo d</code> 将网站上传部署到 GitHub Pages。</p>
<h3 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h3><p>使用 <code>hexo d</code> 上传时,必须重新生成一次静态网页:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo cl &amp; hexo g &amp; hexo d</span><br></pre></td></tr></table></figure>
<p>于是我嫌麻烦就写了个.bat格式的自动上传脚本</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">title</span> &quot;Github upload tool|by——BaiYinh&quot;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cls</span></span><br><span class="line"><span class="built_in">echo</span> 键入Y确认:</span><br><span class="line"><span class="built_in">set</span> /p a=</span><br><span class="line"><span class="keyword">if</span> /i &quot;<span class="variable">%a%</span>&quot;==&quot;Y&quot; (<span class="keyword">goto</span> hexo) <span class="keyword">else</span> (<span class="keyword">exit</span>) </span><br><span class="line"></span><br><span class="line">:hexo</span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>
<p>当然也可以把最后一行修改为以下来绑定自己的域名:</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; <span class="built_in">echo</span> &quot;你的域名&quot; &gt; ./public/CNAME &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>


<hr>
<h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>完成以上操作后你就创建了一个免费的Github Pages博客,快到评论区分享你的成果把(<br>我要去研究接下来的三年要如何使用那台腾讯云主机了。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
</search>
